; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: npx shadow-cljs -d cider/cider-nrepl:0.26.0 watch :app
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉>  ; Use `alt+enter` to evaluate
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉>  ; Use `alt+enter` to evaluate
0.9104477611940298
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:2
 Use of undeclared Var trig.triangle-test/solve-sides
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:93
 Use of undeclared Var trig.triangle-test/rad
--------------------------------------------------------------------------------

cljs꞉trig.triangle-test꞉> 
#'trig.triangle/rad
cljs꞉trig.triangle꞉> 
{:vertices ["A" "C" "B"], :lines [4 65324957412781480 65324957412781480], :angles [nil 1.5707963267948966 0.6108652381980153]}
cljs꞉trig.triangle꞉> 
{:lines [4 65324957412781480 65324957412781480], :angles [nil 1.5707963267948966 0.6108652381980153]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/solve-sides
cljs꞉trig.triangle꞉> 
{:lines [4 65324957412781480 65324957412781480], :angles [nil 1.5707963267948966 0.6108652381980153]}
cljs꞉trig.triangle꞉> 
0.6108652381980153
cljs꞉trig.triangle꞉> 
1.5707963267948966
cljs꞉trig.triangle꞉> 
#'trig.triangle/right-triangle-side
cljs꞉trig.triangle꞉> 
{:lines [4 nil 6.973787182484393], :angles [nil 1.5707963267948966 0.6108652381980153]}
cljs꞉trig.triangle꞉> 
nil
cljs꞉trig.triangle-test꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:10
 Use of undeclared Var trig.triangle-test/right-triangle-side-test
--------------------------------------------------------------------------------

cljs꞉trig.triangle-test꞉> 
:repl/exception!
; 
; Execution error (TypeError) at (<cljs repl>:1).
Cannot read properties of undefined (reading 'call')
cljs꞉trig.triangle-test꞉> 
:repl/exception!
; 
; Execution error (TypeError) at (<cljs repl>:1).
Cannot read properties of undefined (reading 'call')
cljs꞉trig.triangle-test꞉> 
nil
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/right-triangle-side-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 1 tests containing 1 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
{:lines [nil nil 5], :angles [nil 1.5707963267948966 0.6108652381980153]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/right-triangle-side
cljs꞉trig.triangle꞉> 
{:lines [nil nil 2.8678821817552302], :angles [nil 1.5707963267948966 0.6108652381980153]}
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:2
 Use of undeclared Var trig.triangle-test/deftest
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:10
 Use of undeclared Var trig.triangle-test/right-triangle-side-test
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:2:4
 Use of undeclared Var trig.triangle-test/is
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-ns ------------------------------------------------
;  Resource: <eval>:2:11
 No such namespace: tri, could not locate tri.cljs, tri.cljc, or JavaScript source providing "tri"
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:2:11
 Use of undeclared Var tri/right-triangle-side
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:2:72
 Use of undeclared Var trig.triangle-test/pi
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:2:79
 Use of undeclared Var trig.triangle-test/rad
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:4:4
 Use of undeclared Var trig.triangle-test/is
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-ns ------------------------------------------------
;  Resource: <eval>:4:11
 No such namespace: tri, could not locate tri.cljs, tri.cljc, or JavaScript source providing "tri"
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:4:11
 Use of undeclared Var tri/right-triangle-side
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:4:72
 Use of undeclared Var trig.triangle-test/pi
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:4:79
 Use of undeclared Var trig.triangle-test/rad
--------------------------------------------------------------------------------

cljs꞉trig.triangle-test꞉> 
nil
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/right-triangle-side-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 1 tests containing 2 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
{:lines [nil nil 5], :angles [1.2217304763960306 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/right-triangle-side
cljs꞉trig.triangle꞉> 
{:lines [1.7101007166283442 nil 5], :angles [1.2217304763960306 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
#'trig.triangle-test/right-triangle-side-test
cljs꞉trig.triangle-test꞉> 
{:lines [nil 7 nil], :angles [nil 1.5707963267948966 1.1344640137963142]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/right-triangle-side
cljs꞉trig.triangle꞉> 
{:lines [15.01154844356691 7 nil], :angles [nil 1.5707963267948966 1.1344640137963142]}
cljs꞉trig.triangle꞉> 
{:lines [2 nil 2.2067558379249834], :angles [nil 1.5707963267948966 1.1344640137963142]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/right-triangle-side
cljs꞉trig.triangle꞉> 
{:lines [2 0.9326153163099972 2.2067558379249834], :angles [nil 1.5707963267948966 1.1344640137963142]}
cljs꞉trig.triangle꞉> 
nil
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/right-triangle-sides-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


FAIL in (right-triangle-sides-test) (repl-input.cljs:2:7)

expected: (= (tri/right-triangle-sides {:sides [4 nil nil], :angles [nil (/ pi 2) (rad 35)]}) {:sides [4 nil 6.973787182484393], :angles [nil 1.5707963267948966 0.6108652381980153]})

  actual: (not (= {:sides [4 5.7125920269684585 6.973787182484393], :angles [nil 1.5707963267948966 0.6108652381980153]} {:sides [4 nil 6.973787182484393], :angles [nil 1.5707963267948966 0.6108652381980153]}))


Ran 1 tests containing 4 assertions.

1 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/right-triangle-sides-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 1 tests containing 4 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
{:sides [2 0.9326153163099972 2.2067558379249834], :angles [nil 1.5707963267948966 1.1344640137963142]}
cljs꞉trig.triangle꞉> 
#'trig.triangle-test/right-triangle-sides-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 1 tests containing 5 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
{:sides [6.433520761528676 3 nil], :angles [nil 1.5707963267948966 1.1344640137963142]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/right-triangle-sides
cljs꞉trig.triangle꞉> 
{:sides [6.433520761528676 3 7.098604749457495], :angles [nil 1.5707963267948966 1.1344640137963142]}
cljs꞉trig.triangle꞉> 
#'trig.triangle-test/right-triangle-sides-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


FAIL in (right-triangle-sides-test) (repl-input.cljs:8:7)

expected: (= (tri/right-triangle-sides {:sides [nil 7 nil], :angles [nil (/ pi 2) (rad 65)]}) {:sides [15.01154844356691 7 nil], :angles [nil 1.5707963267948966 1.1344640137963142]})

  actual: (not (= {:sides [15.01154844356691 7 16.56341108206749], :angles [nil 1.5707963267948966 1.1344640137963142]} {:sides [15.01154844356691 7 nil], :angles [nil 1.5707963267948966 1.1344640137963142]}))


Ran 1 tests containing 6 assertions.

1 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/right-triangle-sides-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 1 tests containing 6 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:71
 Use of undeclared Var trig.triangle/nill
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
{:sides [nil 3 nil], :angles [0.3490658503988659 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/right-triangle-sides
cljs꞉trig.triangle꞉> 
{:sides [nil 3 8.771413200489262], :angles [0.3490658503988659 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
#'trig.triangle-test/right-triangle-sides-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 1 tests containing 7 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
{:sides [nil nil 2.298133329356934], :angles [nil 1.5707963267948966 0.8726646259971648]}
cljs꞉trig.triangle꞉> 
{:sides [nil nil 2.298133329356934], :angles [nil 1.5707963267948966 0.8726646259971648]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/right-triangle-sides
cljs꞉trig.triangle꞉> 
{:sides [2.298133329356934 nil 3], :angles [nil 1.5707963267948966 0.8726646259971648]}
cljs꞉trig.triangle꞉> 
#'trig.triangle-test/right-triangle-sides-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


FAIL in (right-triangle-sides-test) (repl-input.cljs:4:7)

expected: (= (tri/right-triangle-sides {:sides [nil nil 5], :angles [nil (/ pi 2) (rad 35)]}) {:sides [nil nil 2.8678821817552302], :angles [nil 1.5707963267948966 0.6108652381980153]})

  actual: (not (= {:sides [2.8678821817552302 nil 5], :angles [nil 1.5707963267948966 0.6108652381980153]} {:sides [nil nil 2.8678821817552302], :angles [nil 1.5707963267948966 0.6108652381980153]}))


Ran 1 tests containing 8 assertions.

1 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/right-triangle-sides-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 1 tests containing 8 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
{:sides [2.298133329356934 nil 3], :angles [nil 1.5707963267948966 0.8726646259971648]}
cljs꞉trig.triangle꞉> 
{:sides [1.8793852415718169 nil 2], :angles [0.3490658503988659 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
{:sides [5 nil nil], :angles [0.4363323129985824 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/right-triangle-sides
cljs꞉trig.triangle꞉> 
{:sides [5 2.331538290774993 nil], :angles [0.4363323129985824 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
#'trig.triangle-test/right-triangle-sides-test
cljs꞉trig.triangle-test꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:1
 Can't take value of macro cljs.core/comment
--------------------------------------------------------------------------------

cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 1 tests containing 9 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
{:sides [nil 4 11.69521760065235], :angles [0.3490658503988659 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
{:sides [nil 4 11.69521760065235], :angles [0.3490658503988659 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/right-triangle-sides
cljs꞉trig.triangle꞉> 
{:sides [10.98990967781849 4 11.69521760065235], :angles [0.3490658503988659 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 

Testing trig.triangle-test


FAIL in (right-triangle-sides-test) (repl-input.cljs:14:7)

expected: (= (tri/right-triangle-sides {:sides [nil 3 nil], :angles [(rad 20) (/ pi 2) nil]}) {:sides [nil 3 8.771413200489262], :angles [0.3490658503988659 1.5707963267948966 nil]})

  actual: (not (= {:sides [8.242432258363868 3 8.771413200489262], :angles [0.3490658503988659 1.5707963267948966 nil]} {:sides [nil 3 8.771413200489262], :angles [0.3490658503988659 1.5707963267948966 nil]}))


Ran 1 tests containing 9 assertions.

1 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/right-triangle-sides-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 1 tests containing 9 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
{:sides [5 4.1954981558863995 nil], :angles [0.6981317007977318 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/right-triangle-sides
cljs꞉trig.triangle꞉> 
{:sides [5 4.1954981558863995 6.527036446661393], :angles [0.6981317007977318 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 

Testing trig.triangle-test


FAIL in (right-triangle-sides-test) (repl-input.cljs:18:7)

expected: (= (tri/right-triangle-sides {:sides [5 nil nil], :angles [(rad 25) (/ pi 2) nil]}) {:sides [5 2.331538290774993 nil], :angles [0.4363323129985824 1.5707963267948966 nil]})

  actual: (not (= {:sides [5 2.331538290774993 5.516889594812459], :angles [0.4363323129985824 1.5707963267948966 nil]} {:sides [5 2.331538290774993 nil], :angles [0.4363323129985824 1.5707963267948966 nil]}))


Ran 1 tests containing 9 assertions.

1 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/right-triangle-sides-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 1 tests containing 9 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
{:sides [6 5.03459778706368 7.832443735993672], :angles [nil 1.5707963267948966 0.8726646259971648]}
cljs꞉trig.triangle꞉> 
{:sides [5.437846722219899 nil 6], :angles [nil 1.5707963267948966 1.1344640137963142]}
cljs꞉trig.triangle꞉> 
{:sides [3.064177772475912 nil 4], :angles [0.6981317007977318 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
{:sides [6 5.03459778706368 7.832443735993672], :angles [0.6981317007977318 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
{:sides [2.38350718518842 2 3.1114476537208247], :angles [nil 1.5707963267948966 0.8726646259971648]}
cljs꞉trig.triangle꞉> 
{:sides [5.7125920269684585 4 6.973787182484393], :angles [0.6108652381980153 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
{:sides [3.7587704831436333 nil 4], :angles [nil 1.5707963267948966 1.2217304763960306]}
cljs꞉trig.triangle꞉> 
{:sides [10.98990967781849 4 11.69521760065235], :angles [0.3490658503988659 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
{:sides [15.01154844356691 7 16.56341108206749], :angles [nil 1.5707963267948966 1.1344640137963142]}
cljs꞉trig.triangle꞉> 
{:sides [3.064177772475912 nil 4], :angles [0.6981317007977318 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
{:sides [6.433520761528676 3 7.098604749457495], :angles [nil 1.5707963267948966 1.1344640137963142]}
cljs꞉trig.triangle꞉> 
{:sides [4.289013841019117 2 4.732403166304997], :angles [0.4363323129985824 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
