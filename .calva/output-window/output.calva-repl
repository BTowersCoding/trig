; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: npx shadow-cljs -d cider/cider-nrepl:0.26.0 watch :app
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
<<<<<<< HEAD
cljs꞉cljs.user꞉>  ; Use `alt+enter` to evaluate
[:div [:div [:span {:ref #object[Function]}] [:span {:ref #object[Function]}] [:span {:ref #object[Function]}]]]
clj꞉trig.triangle꞉> 
#'trig.triangle-test/trig-ratios
cljs꞉trig.triangle-test꞉> 
nil
cljs꞉trig.triangle꞉> 
#'trig.triangle/trig-ratios
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/trig-ratios
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
{:vertices ["A" "C" "B"], :lines [12 35 37], :angles [nil 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/trig-ratios
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/trig-ratios
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
#'trig.triangle/trig-ratio
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/trig-ratio
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
#'trig.triangle/trig-ratio
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/trig-ratio
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
#'trig.triangle/trig-ratio
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/trig-ratio
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/trig-ratio
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
1
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/trig-ratio
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/trig-ratio
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
#'trig.triangle/trig-ratio
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/trig-ratio
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
#'trig.triangle/trig-ratio
cljs꞉trig.triangle꞉> 
1
cljs꞉trig.triangle꞉> 
#'trig.triangle/trig-ratio
cljs꞉trig.triangle꞉> 
{:sin {:angle1 [35 37], :angle3 [12 37]}, :csc {:angle1 [37 35], :angle3 [37 12]}, :cos {:angle1 [12 37], :angle3 [35 37]}, :sec {:angle1 [37 12], :angle3 [37 35]}, :tan {:angle1 [35 12], :angle3 [12 35]}, :cot {:angle1 [12 35], :angle3 [35 12]}}
cljs꞉trig.triangle꞉> 
#'trig.triangle/trig-ratios
cljs꞉trig.triangle꞉> 
{:sin {:angle1 [35 37], :angle3 [12 37]}, :csc {:angle1 [37 35], :angle3 [37 12]}, :cos {:angle1 [12 37], :angle3 [35 37]}, :sec {:angle1 [37 12], :angle3 [37 35]}, :tan {:angle1 [35 12], :angle3 [12 35]}, :cot {:angle1 [12 35], :angle3 [35 12]}}
cljs꞉trig.triangle꞉> 
"\\tan"
cljs꞉trig.triangle꞉> 
:\tan
cljs꞉trig.triangle꞉> 
nil
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:10
 Wrong number of args (2) passed to clojure.string/replace
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
:tan
cljs꞉trig.triangle꞉> 
{:angle1 [35 12], :angle3 [12 35]}
cljs꞉trig.triangle꞉> 
{:angle1 [35 12], :angle3 [12 35]}
cljs꞉trig.triangle꞉> 
{:angle1 [35 12], :angle3 [12 35]}
cljs꞉trig.triangle꞉> 
{:angle1 [35 12], :angle3 [12 35]}
cljs꞉trig.triangle꞉> 
{:angle1 [35 12], :angle3 [12 35]}
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/ratio
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
{:vertices ["A" "C" "B"], :lines [12 35 37], :angles [nil 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
#'trig.triangle/ratio
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/ratio
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
#'trig.triangle/ratio
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/ratio
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
nil
; ------ REPL Error while processing ---------------------------------------------
; (defn ratio [{[line1 line2 line3] :lines
              [angle1 angle2 angle3] :angles
              [label1 label2 label3] :vertices} :as triangle]
  (let [{[numer1 denom1] :angle1
         [numer3 denom3] :angle3}
        ((keyword (str/replace @trig-fn "\\" "")) (trig-ratios triangle))]
    [:div (tex (str @trig-fn "(\\angle{" label1 "})=\\dfrac{" numer1 "}{" denom1 "}")) [:p]
     (tex (str @trig-fn "(\\angle{" label3 "})=\\dfrac{" numer3 "}{" denom3 "}"))]))
Syntax error macroexpanding cljs.core/defn.
Call to cljs.core/defn did not conform to spec.
-- Spec failed --------------------

  (... [... :as ...] ...)
            ^^^

has extra input

or value

  (... [{[line1 line2 line3] :lines,
         [angle1 angle2 angle3] :angles,
         [label1 label2 label3] :vertices} ... ...] ...)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

should satisfy

  vector?

-- Relevant specs -------

:shadow.cljs.devtools.cljs-specs/param-list:
  (clojure.spec.alpha/and
   clojure.core/vector?
   (clojure.spec.alpha/cat
    :params
    (clojure.spec.alpha/* :shadow.cljs.devtools.cljs-specs/binding-form)
    :var-params
    (clojure.spec.alpha/?
     (clojure.spec.alpha/cat
      :ampersand
      #{'&}
      :var-form
      :shadow.cljs.devtools.cljs-specs/binding-form))))
:shadow.cljs.devtools.cljs-specs/params+body:
  (clojure.spec.alpha/cat
   :params
   :shadow.cljs.devtools.cljs-specs/param-list
   :body
   (clojure.spec.alpha/alt
    :prepost+body
    (clojure.spec.alpha/cat
     :prepost
     clojure.core/map?
     :body
     (clojure.spec.alpha/+ clojure.core/any?))
    :body
    (clojure.spec.alpha/* clojure.core/any?)))
:shadow.cljs.devtools.cljs-specs/defn-args:
  (clojure.spec.alpha/cat
   :fn-name
   clojure.core/simple-symbol?
   :docstring
   (clojure.spec.alpha/? clojure.core/string?)
   :meta
   (clojure.spec.alpha/? clojure.core/map?)
   :fn-tail
   (clojure.spec.alpha/alt
    :arity-1
    :shadow.cljs.devtools.cljs-specs/params+body
    :arity-n
    (clojure.spec.alpha/cat
     :bodies
     (clojure.spec.alpha/+
      (clojure.spec.alpha/spec
       :shadow.cljs.devtools.cljs-specs/params+body))
     :attr-map
     (clojure.spec.alpha/? clojure.core/map?))))

-------------------------
Detected 1 error

cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:1
 Wrong number of args (1) passed to trig.triangle/ratio
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
#'trig.triangle/ratio
cljs꞉trig.triangle꞉> 
[:div [:span {:ref #object[Function]}] [:p] [:span {:ref #object[Function]}]]
cljs꞉trig.triangle꞉> 
(assoc-in (assoc-in triangle [:lines (mod (first common-angles) 3)] length) [:lines (mod (last common-angles) 3)] length)
cljs꞉trig.triangle꞉> 
{:sin {:angle1 [35 37], :angle3 [12 37]}, :csc {:angle1 [37 35], :angle3 [37 12]}, :cos {:angle1 [12 37], :angle3 [35 37]}, :sec {:angle1 [37 12], :angle3 [37 35]}, :tan {:angle1 [35 12], :angle3 [12 35]}, :cot {:angle1 [12 35], :angle3 [35 12]}}
cljs꞉trig.triangle꞉> 
{:vertices ["A" "C" "B"], :lines [12 35 37], :angles [nil 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
{:sin {:angle1 [35 37], :angle3 [12 37]}, :csc {:angle1 [37 35], :angle3 [37 12]}, :cos {:angle1 [12 37], :angle3 [35 37]}, :sec {:angle1 [37 12], :angle3 [37 35]}, :tan {:angle1 [35 12], :angle3 [12 35]}, :cot {:angle1 [12 35], :angle3 [35 12]}}
cljs꞉trig.triangle꞉> 
{:sin {:angle1 [35 37], :angle3 [12 37]}, :csc {:angle1 [37 35], :angle3 [37 12]}, :cos {:angle1 [12 37], :angle3 [35 37]}, :sec {:angle1 [37 12], :angle3 [37 35]}, :tan {:angle1 [35 12], :angle3 [12 35]}, :cot {:angle1 [12 35], :angle3 [35 12]}}
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:2
 Use of undeclared Var trig.triangle-test/run-tests
--------------------------------------------------------------------------------

cljs꞉trig.triangle-test꞉> 
; Evaluating file: triangle_test.cljs
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:3:10
 Use of undeclared Var trig.triangle-test/infer-angle-test
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:3:10
 Use of undeclared Var trig.triangle-test/isosceles-sides-test
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:3:10
 Use of undeclared Var trig.triangle-test/hypotenuse-test
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:3:10
 Use of undeclared Var trig.triangle-test/trig-ratios-test
--------------------------------------------------------------------------------

; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:4:11
 Use of undeclared Var trig.triangle-test/trig-ratios
--------------------------------------------------------------------------------

nil
cljs꞉trig.triangle-test꞉> 
nil
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 0 tests containing 0 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
; Evaluating file: triangle_test.cljs
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:4:11
 Use of undeclared Var trig.triangle-test/trig-ratios
--------------------------------------------------------------------------------

nil
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/trig-ratios-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 1 tests containing 1 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
; Evaluating file: triangle_test.cljs
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:4:11
 Use of undeclared Var trig.triangle-test/trig-ratios
--------------------------------------------------------------------------------

nil
cljs꞉trig.triangle-test꞉> 
nil
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/round
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/pi
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/rad
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/infer-angle-test
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/isosceles-sides-test
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/hypotenuse-test
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/trig-ratios-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 4 tests containing 4 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
{:sin {:angle1 [4 5], :angle3 [3 5]}, :csc {:angle1 [5 4], :angle3 [5 3]}, :cos {:angle1 [3 5], :angle3 [4 5]}, :sec {:angle1 [5 3], :angle3 [5 4]}, :tan {:angle1 [4 3], :angle3 [3 4]}, :cot {:angle1 [3 4], :angle3 [4 3]}}
cljs꞉trig.triangle꞉> 
{:vertices ["B" "C" "A"], :lines [5 nil nil], :angles [0.4363323129985824 1.5707963267948966 177.99287136020652]}
cljs꞉trig.triangle꞉> 
{:vertices ["B" "C" "A"], :lines [5 nil nil], :angles [0.4363323129985824 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
{:vertices ["B" "C" "A"], :lines [5 nil nil], :angles [0.4363323129985824 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
{:lines [5 2.331538290774993 5.516889594812459], :angles [0.4363323129985824 1.5707963267948966 1.1344640137963142]}
cljs꞉trig.triangle꞉> 
:repl/exception!
; 
; Execution error (TypeError) at (<cljs repl>:1).
Cannot set properties of undefined (setting 'two_angles_test')
cljs꞉trig.triangle-test꞉> 
:repl/exception!
; 
; Execution error (TypeError) at (<cljs repl>:1).
Cannot read properties of undefined (reading 'run_block')
cljs꞉trig.triangle-test꞉> 
nil
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/round
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/pi
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/rad
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/infer-angle-test
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/isosceles-sides-test
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/hypotenuse-test
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/trig-ratios-test
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/two-angles-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


FAIL in (two-angles-test) (repl-input.cljs:2:7)

expected: (= {:lines [5 2.331538290774993 5.516889594812459], :angles [0.4363323129985824 1.5707963267948966 1.1344640137963142]} (:angle3 (tri/solve-triangle {:lines [5 nil nil], :angles [(rad 25) (/ pi 2) nil]})))

  actual: (not (= {:lines [5 2.331538290774993 5.516889594812459], :angles [0.4363323129985824 1.5707963267948966 1.1344640137963142]} nil))


Ran 5 tests containing 5 assertions.

1 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


FAIL in (two-angles-test) (repl-input.cljs:2:7)

expected: (= {:lines [5 2.331538290774993 5.516889594812459], :angles [0.4363323129985824 1.5707963267948966 1.1344640137963142]} (:angle3 (tri/solve-triangle {:lines [5 nil nil], :angles [(rad 25) (/ pi 2) nil]})))

  actual: (not (= {:lines [5 2.331538290774993 5.516889594812459], :angles [0.4363323129985824 1.5707963267948966 1.1344640137963142]} nil))


Ran 5 tests containing 5 assertions.

1 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
{:lines [5 2.331538290774993 5.516889594812459], :angles [0.4363323129985824 1.5707963267948966 1.1344640137963142]}
cljs꞉trig.triangle-test꞉> 
nil
; ------ REPL Error while processing ---------------------------------------------
; (run-tests)
no source by provide: trig.triangle-test
{:provide trig.triangle-test}
ExceptionInfo: no source by provide: trig.triangle-test
	shadow.build.data/get-source-id-by-provide (data.clj:186)
	shadow.build.data/get-source-id-by-provide (data.clj:183)
	shadow.build.data/get-source-by-provide (data.clj:189)
	shadow.build.data/get-source-by-provide (data.clj:188)
	shadow.cljs.repl/repl-compile/fn--15628/fn--15629 (repl.clj:437)
	shadow.cljs.repl/repl-compile/fn--15628 (repl.clj:413)
	shadow.cljs.repl/repl-compile (repl.clj:411)
	shadow.cljs.repl/repl-compile (repl.clj:408)
	shadow.cljs.repl/process-read-result (repl.clj:499)
	shadow.cljs.repl/process-read-result (repl.clj:475)
	shadow.cljs.repl/process-input (repl.clj:659)
	shadow.cljs.repl/process-input (repl.clj:637)
	shadow.cljs.devtools.server.worker.impl/eval16193/fn--16196 (impl.clj:685)
	clojure.lang.MultiFn.invoke (MultiFn.java:234)
	shadow.cljs.devtools.server.util/server-thread/fn--15837/fn--15838/fn--15846 (util.clj:284)
	shadow.cljs.devtools.server.util/server-thread/fn--15837/fn--15838 (util.clj:283)
	shadow.cljs.devtools.server.util/server-thread/fn--15837 (util.clj:256)
	java.lang.Thread.run (Thread.java:833)

cljs꞉trig.triangle-test꞉> 
nil
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/round
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/pi
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/rad
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/infer-angle-test
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/isosceles-sides-test
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/hypotenuse-test
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/trig-ratios-test
cljs꞉trig.triangle-test꞉> 
#'trig.triangle-test/two-angles-test
cljs꞉trig.triangle-test꞉> 

Testing trig.triangle-test


Ran 5 tests containing 5 assertions.

0 failures, 0 errors.

nil
cljs꞉trig.triangle-test꞉> 
{:vertices ["A" "C" "B"], :lines [nil 5 9], :angles [1.5707963267948966 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
{:vertices ["A" "C" "B"], :lines [nil 5 9], :angles [nil 1.5707963267948966 nil]}
cljs꞉trig.triangle꞉> 
[nil 1.5707963267948966 nil]
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:10
 Wrong number of args (2) passed to cljs.core/not
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:10
 Wrong number of args (2) passed to cljs.core/not
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:10
 Wrong number of args (2) passed to cljs.core/not
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :fn-arity -----------------------------------------------------
;  Resource: <eval>:1:10
 Wrong number of args (2) passed to cljs.core/complement
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
[nil 1.5707963267948966 nil]
cljs꞉trig.triangle꞉> 
(1.5707963267948966)
cljs꞉trig.triangle꞉> 
=======
cljs꞉cljs.user꞉> 
{:vertices ["R" "T" "S"], :lines [3 3 nil], :angles [0.7853981633974483 1.5707963267948966 0.7853981633974483]}
clj꞉trig.triangle꞉> 
nil
clj꞉trig.triangle꞉> 
>>>>>>> 962715e48fe01db50497f77bdf38e3af62e655e6
1.0471975511965976
cljs꞉trig.triangle꞉> 
2.9999999999999996
cljs꞉trig.triangle꞉> 
2.9999999999999996
cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:2
 Use of undeclared Var trig.triangle/round
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:2
 Use of undeclared Var trig.triangle/round
--------------------------------------------------------------------------------

cljs꞉trig.triangle꞉> 
#'trig.triangle/round
cljs꞉trig.triangle꞉> 
3
cljs꞉trig.triangle꞉> 
4.440892098500626E-16
cljs꞉trig.triangle꞉> 
3
cljs꞉trig.triangle꞉> 
2.9999999999999996
cljs꞉trig.triangle꞉> 
4.440892098500626E-16
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
true
cljs꞉trig.triangle꞉> 
2
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
[:span {:ref #object[Function]}]
cljs꞉trig.triangle꞉> 
2
cljs꞉trig.triangle꞉> 
110
cljs꞉trig.triangle꞉> 
1.0471975511965976
cljs꞉trig.triangle꞉> 
[1.0471975511965979 1.5707963267948966 0.5235987755982988]
cljs꞉trig.triangle꞉> 
#{1.5707963267948966 1.0471975511965979 0.5235987755982988}
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
1.5707963267948966
cljs꞉trig.triangle꞉> 
true
cljs꞉trig.triangle꞉> 
true
cljs꞉trig.triangle꞉> 
1.5707963267948966
cljs꞉trig.triangle꞉> 
3
cljs꞉trig.triangle꞉> 
[:span {:ref #object[Function]}]
cljs꞉trig.triangle꞉> 
[:span {:ref #object[Function]}]
cljs꞉trig.triangle꞉> 
true
cljs꞉trig.triangle꞉> 
0.20943951023931953
cljs꞉trig.triangle꞉> 
0
cljs꞉trig.triangle꞉> 
0.20943951023931953
cljs꞉trig.triangle꞉> 
-0.20943951023931953
cljs꞉trig.triangle꞉> 
[:span {:ref #object[Function]}]
cljs꞉trig.triangle꞉> 
#'trig.triangle/pi-frac
cljs꞉trig.triangle꞉> 
[:span {:ref #object[Function]}]
cljs꞉trig.triangle꞉> 
false
cljs꞉trig.triangle꞉> 
[:span {:ref #object[Function]}]
cljs꞉trig.triangle꞉> 
#'trig.triangle/pi-frac
cljs꞉trig.triangle꞉> 
